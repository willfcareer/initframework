<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	<debug/>

	<global-method-security pre-post-annotations="enabled" />

	<http pattern="/static/**" security="none" />
	<http pattern="/loggedout.jsp" security="none" />
	<http pattern="/index.jsp" security="none" />

	<http use-expressions="true">
		<intercept-url pattern="/secure/extreme/**" access="hasRole('SECURE_EXTREME_INDEX')" />
		<intercept-url pattern="/secure/**" access="isAuthenticated()" />
		<!-- Allow all other requests. In a real application you should adopt a 
			whitelisting approach where access is not allowed by default -->
		<intercept-url pattern="/**" access="permitAll" />
			
		<form-login />
		<logout logout-success-url="/loggedout.jsp" delete-cookies="JSESSIONID" />
		<remember-me />
		<!-- Uncomment to enable X509 client authentication support <x509 /> -->
		<!-- Uncomment to limit the number of sessions a user can have -->
		<session-management invalid-session-url="/timeout.jsp">
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management>
		<!-- 
		<custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER" />
		 -->
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter" />
	</http>

	<beans:bean id="loginFilter" class="com.xiaomi.ebiz.security.DefaultUsernamePasswordAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
		<beans:property name="authenticationSuccessHandler"
			ref="loginLogAuthenticationSuccessHandler" />
		<beans:property name="authenticationFailureHandler"
			ref="simpleUrlAuthenticationFailureHandler" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
	<beans:bean id="loginLogAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/index.jsp"></beans:property>
	</beans:bean>
	<beans:bean id="simpleUrlAuthenticationFailureHandler"
		class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login.jsp"></beans:property>
	</beans:bean>

	<beans:bean id="securityFilter"
		class="com.xiaomi.ebiz.security.UrlSecurityFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<!-- 
		<beans:property name="securityMetadataSource" ref="securityMetadataSource" />
		 -->
	</beans:bean>
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailService" />
	</authentication-manager>

	<beans:bean id="accessDecisionManager"
		class="com.xiaomi.ebiz.security.DefaultAccessDecisionManager" />
	<beans:bean id="securityMetadataSource"
		class="com.xiaomi.ebiz.security.DefaultSecurityMetadataSource" />
	<beans:bean id="userDetailService"
		class="com.xiaomi.ebiz.security.DefaultUserDetailsService" />

	<beans:bean id="authenticationProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login.jsp"></beans:property>
	</beans:bean>
</beans:beans>
